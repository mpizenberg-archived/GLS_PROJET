/*
* generated by Xtext
*/
package fr.enseeiht.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.enseeiht.services.PDLXGrammarAccess;

public class PDLXParser extends AbstractContentAssistParser {
	
	@Inject
	private PDLXGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.enseeiht.ui.contentassist.antlr.internal.InternalPDLXParser createParser() {
		fr.enseeiht.ui.contentassist.antlr.internal.InternalPDLXParser result = new fr.enseeiht.ui.contentassist.antlr.internal.InternalPDLXParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getProcessElementAccess().getAlternatives(), "rule__ProcessElement__Alternatives");
					put(grammarAccess.getWorkSequenceTypeAccess().getAlternatives(), "rule__WorkSequenceType__Alternatives");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup(), "rule__WorkDefinition__Group__0");
					put(grammarAccess.getRessourceAccess().getGroup(), "rule__Ressource__Group__0");
					put(grammarAccess.getNeedAccess().getGroup(), "rule__Need__Group__0");
					put(grammarAccess.getNeedSetAccess().getGroup(), "rule__NeedSet__Group__0");
					put(grammarAccess.getWorkSequenceAccess().getGroup(), "rule__WorkSequence__Group__0");
					put(grammarAccess.getProcessAccess().getNameAssignment_1(), "rule__Process__NameAssignment_1");
					put(grammarAccess.getProcessAccess().getProcessElementsAssignment_3(), "rule__Process__ProcessElementsAssignment_3");
					put(grammarAccess.getWorkDefinitionAccess().getNameAssignment_1(), "rule__WorkDefinition__NameAssignment_1");
					put(grammarAccess.getRessourceAccess().getNameAssignment_1(), "rule__Ressource__NameAssignment_1");
					put(grammarAccess.getRessourceAccess().getQuantityAssignment_3(), "rule__Ressource__QuantityAssignment_3");
					put(grammarAccess.getNeedAccess().getRessourceAssignment_1(), "rule__Need__RessourceAssignment_1");
					put(grammarAccess.getNeedAccess().getQuantityAssignment_3(), "rule__Need__QuantityAssignment_3");
					put(grammarAccess.getNeedAccess().getNeedSetAssignment_6(), "rule__Need__NeedSetAssignment_6");
					put(grammarAccess.getNeedSetAccess().getNameAssignment_1(), "rule__NeedSet__NameAssignment_1");
					put(grammarAccess.getNeedSetAccess().getWdAssignment_3(), "rule__NeedSet__WdAssignment_3");
					put(grammarAccess.getWorkSequenceAccess().getLinkTypeAssignment_1(), "rule__WorkSequence__LinkTypeAssignment_1");
					put(grammarAccess.getWorkSequenceAccess().getPredecessorAssignment_3(), "rule__WorkSequence__PredecessorAssignment_3");
					put(grammarAccess.getWorkSequenceAccess().getSuccessorAssignment_5(), "rule__WorkSequence__SuccessorAssignment_5");
					put(grammarAccess.getGuidanceAccess().getTextAssignment(), "rule__Guidance__TextAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.enseeiht.ui.contentassist.antlr.internal.InternalPDLXParser typedParser = (fr.enseeiht.ui.contentassist.antlr.internal.InternalPDLXParser) parser;
			typedParser.entryRuleProcess();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PDLXGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PDLXGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
